import type { NextPage } from "next";
import { useState, useRef, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.scss";
import { Throttle } from "../utlis/index";
import { motion, useCycle } from "framer-motion";
import Link from "next/link";
import { NavBtn } from "../components/NavBtn";
import { useDimensions } from "../components/use-dimensions";
interface Type {
  d?: string;
  transition?: {
    duration: number;
  };
  variants: {
    open: {
      d?: string;
      opacity?: number;
    };
    closed: {
      d?: string;
      opacity?: number;
    };
  };
}
const Path = (props: Type) => (
  <motion.path
    fill="transparent"
    strokeWidth="3"
    stroke="hsl(0, 0%, 18%)"
    strokeLinecap="round"
    {...props}
  />
);

export const config = { map: true };
const Home: NextPage = () => {
  const [isOpen, toggleOpen] = useCycle(false, true);
  let [transform3d, setTransform3d] = useState({ x: 0, y: 0 });
  let [posts, setPosts] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);
  const containerRef = useRef(null);
  const { height } = useDimensions(containerRef);
  async function transform(screenX: number, screenY: number) {
    let x: number, y: number;
    let Width = window.innerWidth / 2;
    let Height = window.innerHeight / 2;
    x = +((Width - screenX) / 20).toFixed(1);
    y = +((Height - screenY) / 20).toFixed(1);
    await setTransform3d({ x, y });
  }
  function handleMouseMove(e: any) {
    window.requestAnimationFrame(() => {
      transform(e.screenX, e.screenY);
    });
  }
  const sidebar = {
    open: (height = 1000) => ({
      clipPath: `circle(${height}px at 40px 40px)`,
      transition: {
        type: "spring",
        stiffness: 20,
        restDelta: 0,
      },
    }),
    closed: {
      clipPath: "circle(0px at 0px 0px)",
      transition: {
        // delay: 0.5,
        type: "spring",
        // stiffness: 400,
        damping: 20,
      },
    },
  };
  let Mask = () => (isOpen ? <div></div> : "");
  useEffect(() => {
    console.log(isOpen);
  }, [isOpen]);
  return (
    <div className={styles.container}>
      <Head>
        <title>Growth Diary</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={styles.main}>
          <motion.nav
            initial={false}
            animate={isOpen ? "open" : "closed"}
            custom={height}
            ref={containerRef}
          >
            <motion.div className={styles.background} variants={sidebar} />
            <div className={styles.head}>
              <h1>Aurora</h1>
              <div className={styles.headBtn}>
                <NavBtn toggle={() => toggleOpen()} />
              </div>
            </div>
          </motion.nav>
          {}
          <div className={styles.Cover} onMouseMove={handleMouseMove}>
            <div className={styles.image}>
              <motion.div
                animate={transform3d}
                transition={{ ease: "easeOut", duration: 0.5 }}
                className={styles.motion}
              >
                <Image
                  className={styles.img}
                  src="http://g.auroraone.top/1594348066004.png"
                  layout="fill"
                  sizes="100vh"
                  quality={100}
                  priority={true}
                  objectFit="cover"
                  alt=""
                />
              </motion.div>
            </div>
            <div className={styles.mask} />
          </div>
        </div>
        <div className={styles.content}>
          {posts.map((item, index) => (
            <div className={styles.post} key={index}>
              <div className={styles.imageBox}>
                <div className={styles.Image}>
                  <Image
                    src="http://g.auroraone.top/Diary/127f2bf2880511ebb6edd017c2d2eca2.jpg"
                    layout="fill"
                    sizes="100vh"
                    objectFit="cover"
                    alt=""
                  />
                </div>
              </div>
              <div className={styles.info}>
                <p className={styles.date}>八月 01, 2021</p>
                <p className={styles.title}>谁都有雨天没伞的时候</p>
                <p>
                  八月，立秋寒蝉鸣、四季不倒流、转机也不降临。来深圳也有几年了，这是我第二次体验身无分文的感觉，无奈也仿徨。...
                </p>
              </div>
            </div>
          ))}
          <div className={styles.more}>
            <div className={styles.loadmore}>
              <div className={styles.btn}>Load More</div>
            </div>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="#" rel="noopener noreferrer">
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
